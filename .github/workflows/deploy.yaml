name: Payments API Deploy
on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]

env:
  CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  DOCKER_IMAGE: rafaelvmasc/lanchonete-payments-api

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: yarn

      - name: Test and Coverage
        run: yarn test:cov

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

  deploy:
    name: Deploy to Kubernetes
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get Commit Short Hash
        id: commit_hash
        run: echo "image_tag=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.image_tag }} .
          docker push ${{ env.DOCKER_IMAGE }}:${{ env.image_tag }}

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Get kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region us-east-1

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Helm Upgrade
        env:
          DB_USER: ${{ secrets.PAYMENTS_DB_USER }}
          DB_PASSWORD: ${{ secrets.PAYMENTS_DB_PASSWORD }}
          DB_NAME: ${{ secrets.PAYMENTS_DB_NAME }}
          DB_HOST: ${{ secrets.PAYMENTS_DB_HOST }}
          MERCADO_PAGO_API_URL: ${{ secrets.MERCADO_PAGO_API_URL }}
          MERCADO_PAGO_ACCESS_TOKEN: ${{ secrets.MERCADO_PAGO_ACCESS_TOKEN }}
          MERCADO_PAGO_USER_ID: ${{ secrets.MERCADO_PAGO_USER_ID }}
          MERCADO_PAGO_EXTERNAL_POS_ID: ${{ secrets.MERCADO_PAGO_EXTERNAL_POS_ID }}
          PAYMENT_WEBHOOK_URL: ${{ secrets.PAYMENT_WEBHOOK_URL }}
          ORDERS_SERVICE_URL: ${{ secrets.ORDERS_SERVICE_URL }}
        run: |
          helm upgrade --install lanchonete-payments-api ./k8s/lanchonete-payments-api \
            --set api.env.DB_USER=$DB_USER \
            --set api.env.DB_PASSWORD=$DB_PASSWORD \
            --set api.env.DB_NAME=$DB_NAME \
            --set api.env.DB_HOST=$DB_HOST \
            --set api.env.MERCADO_PAGO_API_URL=$MERCADO_PAGO_API_URL \
            --set api.env.MERCADO_PAGO_ACCESS_TOKEN=$MERCADO_PAGO_ACCESS_TOKEN \
            --set api.env.MERCADO_PAGO_USER_ID=$MERCADO_PAGO_USER_ID \
            --set api.env.MERCADO_PAGO_EXTERNAL_POS_ID=$MERCADO_PAGO_EXTERNAL_POS_ID \
            --set api.env.PAYMENT_WEBHOOK_URL=$PAYMENT_WEBHOOK_URL \
            --set api.env.ORDERS_SERVICE_URL=$ORDERS_SERVICE_URL \
            --set api.image.repository=${{ env.DOCKER_IMAGE }} \
            --set api.image.tag=${{ env.image_tag }}
